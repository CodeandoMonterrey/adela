.container
  .card
    %h3.title Planea
    %h5.subtitle Plan de apertura
    %p
      El plan de apertura contiene el calendario de publicaci&oacute;n anual
      de los datos abiertos de la instituci&oacute;n
    - if current_inventory.nil?
      .card.padding-top.bg--grey
        %p.primary.boldish
          Publica el inventario de datos
        %p
          Antes de generar el Plan de apertura de la institución debes de subir el Inventario de Datos.
    - elsif current_inventory.inventory_elements.all?(&:private)
      .card.padding-top.bg--grey
        %h5.primary.boldish Tu Inventario de Datos no contiene conjuntos públicos
        %p
          El Inventario de Datos debe de contener al menos un conjunto de datos público para generar el Plan de Apertura.
        = link_to 'Revisar el Inventario de Datos', inventories_es_path, class: 'btn btn-primary'
    - else
      = form_for @organization.catalog, html: { class: 'form', id: 'opening-plan-form' } do |f|
        %table.table.table-striped
          %thead
            %tr
              %th ¿Publicar?
              %th.col-md-4 Nombre del conjunto
              %th.col-md-4 Descripci&oacute;n
              %th Acceso
              %th Frecuencia con la que actualizan
              %th Confirmar fecha de Publicaci&oacute;n
          %tbody
            - @organization.catalog.datasets.each do |dataset|
              = f.fields_for :datasets, dataset do |builder|
                %tr
                  %th.text-center= builder.check_box :published, { checked: true, class: 'validable' }
                  %th
                    = builder.hidden_field :title, readonly: true, required: true
                    = dataset.title
                  %th= builder.text_area :description, required: true, class: 'fill'
                  %th P&uacute;blico
                  %th= builder.select :accrual_periodicity, iso8601_repeating_interval_options_for_select(builder.object.accrual_periodicity), { class: 'form-control' }
                  %th= builder.text_field :publish_date, required: true, class: 'datepicker'
        = f.button 'Generar Plan de Apertura', type: 'submit', class: 'btn btn-primary'

:javascript
  function updateValidations(event) {
    function id() {
      return event.target.id.match(/^catalog_datasets_attributes_(\d+)__destroy/)[1];
    }

    function description() {
      return $("#catalog_datasets_attributes_" + id() + "_description");
    }

    function title() {
      return $("#catalog_datasets_attributes_" + id() + "_name");
    }

    function publishDate() {
      return $("#catalog_datasets_attributes_" + id() + "_publish_date");
    }

    function descriptionErrorLabel() {
      return $("#catalog_datasets_attributes_" + id() + "_description-error");
    }

    function publishDateErrorLabel() {
      return $("#catalog_datasets_attributes_" + id() + "_publish_date-error");
    }

    function removeRequiredAttribute() {
      description().removeAttr("required");
      title().removeAttr("required");
      publishDate().removeAttr("required");
    }

    function addRequiredAttribute() {
      description().attr("required", "");
      title().attr("required", "");
      publishDate().attr("required", "");
    }

    function removeErrors() {
      description().removeClass("error");
      publishDate().removeClass("error");
      descriptionErrorLabel().remove();
      publishDateErrorLabel().remove();
    }

    if ($(this).is(":checked")) {
      addRequiredAttribute();
    } else {
      removeRequiredAttribute();
      removeErrors();
    }
  };

  $(function() {
    $('textarea').autosize();
    $( ".validable" ).change(updateValidations);
    $.datepicker.setDefaults({ dateFormat: 'yy-mm-dd' });
    $( ".datepicker" ).datepicker();
    $( "#opening-plan-form" ).validate();
  });
